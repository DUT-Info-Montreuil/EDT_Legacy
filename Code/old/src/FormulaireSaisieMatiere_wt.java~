package EDT;

import eu.webtoolkit.jwt.WDialog;
import eu.webtoolkit.jwt.WLineEdit;
import eu.webtoolkit.jwt.WComboBox;
import eu.webtoolkit.jwt.WPushButton;
import eu.webtoolkit.jwt.WContainerWidget;
import eu.webtoolkit.jwt.WBorderLayout;
import eu.webtoolkit.jwt.WGridLayout;
import eu.webtoolkit.jwt.WComboBox;
import eu.webtoolkit.jwt.WLabel;
import eu.webtoolkit.jwt.Signal;
import eu.webtoolkit.jwt.Signal.Listener;
import eu.webtoolkit.jwt.WColor;
import eu.webtoolkit.jwt.WCssDecorationStyle;
import eu.webtoolkit.jwt.WSlider;
import eu.webtoolkit.jwt.WString;
import eu.webtoolkit.jwt.AlignmentFlag;
import eu.webtoolkit.jwt.WLength;

import eu.webtoolkit.jwt.WPaintedWidget;

import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;
//import javax.swing.colorchooser.AbstractColorChooserPanel;

/**
 * formulaire d'ajout ou de modification de matière
 */
/*public class FormulaireSaisieMatiere extends JDialog implements ActionListener {*/ 
public class FormulaireSaisieMatiere_wt extends WDialog {
	Matiere matiere;
	EDTApplication_wt edtAppli;
    WLineEdit tf_nom, tf_nom_compl;
    WSlider tf_r, tf_v, tf_b;    
	WComboBox pole;
	WPushButton b_choixCouleurs, b_valider, b_annuler;
	JColorChooser colorChooser;
	
	WDialog dialog = this;
		
	FormulaireSaisieMatiere_wt(EDTApplication_wt _edtAppli, Matiere _matiere, WDialog dial) {
		/*super(dial, "Ajout/modif de matiere", true);*/
		super("Ajout/modif de matiere");		
		
		/*//procedure qui masque et ferme la fenetre
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				dispose(); // on ferme la fenêtre
			}
		});*/
		edtAppli=_edtAppli;
		matiere=_matiere;
		//System.out.println("on reçoit : " + matiere);
		
		/*JPanel panel=new JPanel();
		panel.setLayout(new BorderLayout());*/		
		WContainerWidget panel = new WContainerWidget();
		WBorderLayout borderLayout = new WBorderLayout();
		panel.setLayout(borderLayout);
		
		// les informations sur la matière
		/*JPanel panelMatiere=new JPanel();
		panelMatiere.setLayout(new GridLayout(6,2));*/
		WContainerWidget panelMatiere = new WContainerWidget();
		WGridLayout grid = new WGridLayout();
		panelMatiere.setLayout(grid);
		
		/*tf_nom=new JTextField();
		tf_nom_compl=new JTextField();
		tf_r=new JTextField("128");
		tf_v=new JTextField("128");
		tf_b=new JTextField("128");*/
		tf_nom=new WLineEdit();
		tf_nom_compl=new WLineEdit();
		tf_r=new WSlider(panelMatiere);
		tf_v=new WSlider(panelMatiere);
		tf_b=new WSlider(panelMatiere);		
		
		tf_r.setMinimum(0);
		tf_r.setMaximum(255);
		tf_r.setValue(255);
		tf_r.setToolTip(""+tf_r.getValue());		
		tf_r.setHeight(new WLength(grid.getVerticalSpacing()));
	tf_r.setVerticalAlignment(AlignmentFlag.AlignTextTop);		
	tf_r.setAttributeValue("style", "font-size:2.8em;bgcolor:red");		
		
		tf_v.setMinimum(0);
		tf_v.setMaximum(255);
		tf_v.setValue(255);
		tf_v.setToolTip(""+tf_v.getValue());
		tf_v.setHeight(new WLength(grid.getVerticalSpacing()));

		tf_b.setMinimum(0);
		tf_b.setMaximum(255);
		tf_b.setValue(255);
		tf_b.setToolTip(""+tf_b.getValue());
		tf_b.setHeight(new WLength(grid.getVerticalSpacing()));
		
		
		/*pole=new WComboBox(new Vector<String>(edtAppli.getControleurDb().getPoles(edtAppli.getControleurDb().getIdPromotion((String)edtAppli.getListePromotions().getSelectedItem()))));*/
		ArrayList<String> liste = new ArrayList<String>(edtAppli.getControleurDb().getPoles(edtAppli.getControleurDb().getIdPromotion((String)edtAppli.getListePromotions().getValueText())));
		pole = new WComboBox();
		for(int i=0;i<liste.size();i++){
			pole.addItem(liste.get(i));
		}

		if (matiere!=null) {
			/*tf_nom.setText(matiere.getNom());
			tf_nom_compl.setText(matiere.getNomCompl());
			tf_r.setText(""+matiere.getRouge());
			tf_v.setText(""+matiere.getVert());
			tf_b.setText(""+matiere.getBleu());
			pole.setSelectedItem(matiere.getPole());*/
			
			tf_nom.setText(matiere.getNom());
			tf_nom_compl.setText(matiere.getNomCompl());
			
			tf_r.setValue(matiere.getRouge());
			tf_r.setToolTip(""+tf_r.getValue());
			
			tf_v.setValue(matiere.getVert());
			tf_v.setToolTip(""+tf_v.getValue());
			
			tf_b.setValue(matiere.getBleu());
			tf_b.setToolTip(""+tf_b.getValue());
	
			pole.setValueText(matiere.getPole());
		}		
		tf_nom.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
		tf_nom_compl.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));

		/*panelMatiere.add(new JLabel("nom :"));
		panelMatiere.add(tf_nom);
		panelMatiere.add(new JLabel("nom (complément) :"));
		panelMatiere.add(tf_nom_compl);
		panelMatiere.add(new JLabel("rouge :"));
		panelMatiere.add(tf_r);
		panelMatiere.add(new JLabel("vert :"));
		panelMatiere.add(tf_v);
		panelMatiere.add(new JLabel("bleu :"));
		panelMatiere.add(tf_b);
		panelMatiere.add(new JLabel("pole :"));
		panelMatiere.add(pole);*/		
		grid.addWidget(new WLabel("nom :"), 0, 0);
		grid.addWidget(tf_nom, 0, 1);
		grid.addWidget(new WLabel("complément du nom :"), 1, 0);
		grid.addWidget(tf_nom_compl, 1, 1);
		WLabel rouge = new WLabel("Rouge");
		rouge.setAttributeValue("style", "text-align:right;font-size:2em;color:red");
		grid.addWidget(rouge, 2, 0);
		grid.addWidget(tf_r, 2, 1);
		WLabel vert = new WLabel("Vert");
		vert.setAttributeValue("style", "text-align:right;font-size:2em;color:green;font:bold");
		grid.addWidget(vert, 3, 0);
		grid.addWidget(tf_v, 3, 1);	//
		WLabel bleu = new WLabel("Bleu");
		bleu.setAttributeValue("style", "text-align:right;font-size:2em;color:blue;font-style:bold");
		grid.addWidget(bleu, 4, 0);
		grid.addWidget(tf_b, 4, 1);		
		/*grid.addWidget(new WLabel("pole :"), 5, 0);		
		grid.addWidget(pole, 5, 1);*/		
		
		tf_r.valueChanged().addListener(this, new Signal.Listener() {
				public void trigger() {
					//canvas.setColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue());
					tf_nom.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_nom_compl.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_r.setToolTip(tf_r.getValueText());
					
					/*tf_r.setToolTip(""+tf_r.getValue());
					WCssDecorationStyle cds = new WCssDecorationStyle();
					cds.setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_nom.setDecorationStyle(cds);*/
				}
		});
		tf_v.valueChanged().addListener(this, new Signal.Listener() {
				public void trigger() {
					tf_nom.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_nom_compl.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_v.setToolTip(tf_v.getValueText());
				}
		});
		tf_b.valueChanged().addListener(this, new Signal.Listener() {
				public void trigger() {
					tf_nom.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_nom_compl.getDecorationStyle().setBackgroundColor(new WColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue()));
					tf_b.setToolTip(tf_b.getValueText());
				}
		});
		//final PreviewRect canvas = new PreviewRect(1,20);
		//canvas.setColor(tf_r.getValue(),tf_v.getValue(),tf_b.getValue());
		//grid.addWidget(canvas, 5, 1);


		// les boutons
		/*JPanel panelBoutons=new JPanel();
		panelBoutons.setLayout(new GridLayout(1,3));*/
		WContainerWidget panelBoutons=new WContainerWidget();
		WGridLayout gridBoutons = new WGridLayout();
		panelBoutons.setLayout(gridBoutons);

	
		/*b_choixCouleurs=new JButton("Couleurs");*/
		/*b_valider=new JButton("Valider");
		b_annuler=new JButton("Annuler");*/
		b_valider=new WPushButton("Valider");
		b_annuler=new WPushButton("Annuler");
		
		/*b_choixCouleurs.addActionListener(this);*/		
		/*b_valider.addActionListener(this);
		b_annuler.addActionListener(this);*/			
		b_valider.clicked().addListener(b_valider, new Signal.Listener() {
				public void trigger() {
						actionValider();
				}
						
		});
		b_annuler.clicked().addListener(b_annuler, new Signal.Listener() {
				public void trigger() {
					remove();
					@SuppressWarnings("unused") FormulaireMatieres_wt form = new FormulaireMatieres_wt(edtAppli);
				}					
		});
		b_valider.setStyleClass("btn-info");
		b_annuler.setStyleClass("btn-primary");		
				
		/*panelBoutons.add(b_choixCouleurs);*/
		/*panelBoutons.add(b_valider);
		panelBoutons.add(b_annuler);*/
		getFooter().addWidget(b_valider);
		getFooter().addWidget(b_annuler);
		
		// on ajoute tout dans la fenetre
		/*panel.add(panelMatiere, BorderLayout.CENTER);
		panel.add(panelBoutons, BorderLayout.SOUTH);
		getContentPane().add(panel);*/		
		borderLayout.addWidget(panelMatiere, WBorderLayout.Position.Center);
		getContents().addWidget(panel);		
		
		// positionner au centre de l'écran
		/*setResizable(false);
		pack();
		Rectangle rect=edtAppli.getBounds(); // getToolkit().getScreenSize();
		setLocation(Math.max(0,(int)(rect.x+(rect.width-getWidth())/2)), Math.max(0,(int)(rect.y+(rect.height-getHeight())/2)));*/
		//PreviewRect rect = new PreviewRect();

		this.resize(700, 500);
		this.setResizable(true);
		this.show();
	}
	
	
	public void actionValider() {
			// on vérifie les saisies
			String nom=tf_nom.getText();
			String nom_compl=tf_nom_compl.getText();
			int rouge=Math.min(255,Integer.parseInt("0"+tf_r.getValue()));
			int vert=Math.min(255,Integer.parseInt("0"+tf_v.getValue()));
			int bleu=Math.min(255,Integer.parseInt("0"+tf_b.getValue()));
		String nom_pole=null;/*(String)pole.getSelectedItem();*/
			if (nom_pole==null)
				nom_pole="";
			// on vérifie que la matière n'existe pas
			int id_promo=edtAppli.getControleurDb().getIdPromotion((String)edtAppli.getListePromotions().getValueText());
			TreeSet<Matiere> liste=edtAppli.getControleurDb().getMatieresPromo(id_promo);
			if (matiere!=null) liste.remove(matiere); // on enlève la matière de la liste (mais pas de la BD !)
			Matiere nouv_mat=new Matiere(-1,nom, nom_compl, rouge, vert, bleu, nom_pole);
			if (liste.contains(nouv_mat)) {
				Utilitaire.showMessageDialog(this, "Cette matière existe déjà");
				if (matiere!=null) liste.add(matiere); // on remet l'ancienne matière
			}
			else if (!nom.equals("")){
				String erreurInsertion="";
				if (matiere!=null) erreurInsertion=edtAppli.getControleurDb().modifierMatiere(matiere, nom, nom_compl, rouge, vert, bleu, nom_pole);
				else erreurInsertion=edtAppli.getControleurDb().ajouterMatiere(this, nom, nom_compl, rouge, vert, bleu, nom_pole, id_promo);
				if (!erreurInsertion.equals("")) {
					Utilitaire.showMessageDialog(this, erreurInsertion);
				}
				else liste.add(nouv_mat); // on met la nouvelle matière dans la liste à la place de l'ancienne
				/*dispose();*/
				accept();
				@SuppressWarnings("unused") FormulaireMatieres_wt form = new FormulaireMatieres_wt(edtAppli);
			}
			else {
				Utilitaire.showMessageDialog(this, "Il faut saisir un nom !");
				if (matiere!=null) liste.add(matiere); // on remet l'ancienne matière
			}
	}
	
	
	/*public void actionPerformed(ActionEvent e) {
		JButton b = (JButton)e.getSource();
		if (b.equals(b_valider)) {
			// on vérifie les saisies
			String nom=tf_nom.getText();
			String nom_compl=tf_nom_compl.getText();
			int rouge=Math.min(255,Integer.parseInt("0"+tf_r.getText()));
			int vert=Math.min(255,Integer.parseInt("0"+tf_v.getText()));
			int bleu=Math.min(255,Integer.parseInt("0"+tf_b.getText()));
			String nom_pole=(String)pole.getSelectedItem();
			if (nom_pole==null)
			    nom_pole="";
			// on vérifie que la matière n'existe pas
            int id_promo=edtAppli.getControleurDb().getIdPromotion((String)edtAppli.getListePromotions().getSelectedItem());
			TreeSet<Matiere> liste=edtAppli.getControleurDb().getMatieresPromo(id_promo);
			if (matiere!=null) liste.remove(matiere); // on enlève la matière de la liste (mais pas de la BD !)
			Matiere nouv_mat=new Matiere(-1,nom, nom_compl, rouge, vert, bleu, nom_pole);
			if (liste.contains(nouv_mat)) {
				JOptionPane.showMessageDialog(this, "Cette matière existe déjà");
				if (matiere!=null) liste.add(matiere); // on remet l'ancienne matière
			}
			else if (!nom.equals("")){
				String erreurInsertion="";
				if (matiere!=null) erreurInsertion=edtAppli.getControleurDb().modifierMatiere(matiere, nom, nom_compl, rouge, vert, bleu, nom_pole);
				else erreurInsertion=edtAppli.getControleurDb().ajouterMatiere(nom, nom_compl, rouge, vert, bleu, nom_pole, id_promo);
				if (!erreurInsertion.equals("")) {
					JScrollPane erreurs=new JScrollPane(new JTextArea(erreurInsertion));
					erreurs.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
					erreurs.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			        erreurs.getVerticalScrollBar().setUnitIncrement(20);
					erreurs.setMaximumSize(new Dimension(800,800));
					JOptionPane.showMessageDialog(this, erreurInsertion);
				}
				else liste.add(nouv_mat); // on met la nouvelle matière dans la liste à la place de l'ancienne
				dispose();
			}
			else {
				JOptionPane.showMessageDialog(this, "Il faut saisir un nom !");
				if (matiere!=null) liste.add(matiere); // on remet l'ancienne matière
			} 
		}
		if (b.equals(b_choixCouleurs)) {
			Color coul;
			coul=new Color(Integer.parseInt("0"+tf_r.getText()),Integer.parseInt("0"+tf_v.getText()),Integer.parseInt("0"+tf_b.getText()));
			colorChooser =new JColorChooser(coul);
			if (tf_nom.getText().length()>0)
				colorChooser.setPreviewPanel(new PreviewPanel(colorChooser, tf_nom.getText()+" "+tf_nom_compl.getText(), coul));
			else colorChooser.setPreviewPanel(new PreviewPanel(colorChooser, "Exemple de couleur", coul));
			AbstractColorChooserPanel[] colChoosPan=colorChooser.getChooserPanels();
			AbstractColorChooserPanel[] colChoosPanNEW=new AbstractColorChooserPanel[3];
			for (int i=0; i<colChoosPan.length; i++) {
				String clsName = colChoosPan[i].getClass().getName();
				if (clsName.equals("javax.swing.colorchooser.DefaultSwatchChooserPanel"))
					colChoosPanNEW[0]=new ChoixCouleurMatiere(edtAppli, matiere, edtAppli.getControleurDb().getIdAdmin());
				else if (clsName.equals("javax.swing.colorchooser.DefaultRGBChooserPanel"))
					colChoosPanNEW[1]=colChoosPan[i];
				else if (clsName.equals("javax.swing.colorchooser.DefaultHSBChooserPanel"))
					colChoosPanNEW[2]=colChoosPan[i];
			}
			colorChooser.setChooserPanels(colChoosPanNEW);
			JColorChooser.createDialog(this, "Choix d'une couleur", true, colorChooser, this, this).setVisible(true);
		}
		else if (b.equals(b_annuler))
			dispose();
		else if(b.getText().equals("OK")) { // on a validé un changement de couleur pour la matière
			tf_r.setText(""+colorChooser.getColor().getRed());
			tf_v.setText(""+colorChooser.getColor().getGreen());
			tf_b.setText(""+colorChooser.getColor().getBlue());
		}
	}*/
}
